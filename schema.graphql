type Mutation {
    """
    The mutation used by a user to sign up
    """
    createUser(input: CreateUserInput): TokenPairResponse
    """
    The mutation used by a user to log in
    """
    authenticateUser(input: AuthenticateUserInput): TokenPairResponse
    """
    The mutation used to regenerate an access token from a refresh token
    """
    generateAccessTokenFromRefreshToken(
        input: GenerateAccessTokenFromRefreshTokenInput
    ): TokenPairResponse
}

type Query {
    """
    The query to get a user's username by their id
    """
    getUsernameById(input: GetUsernameByIdInput): GetUsernameByIdResponse
    """
    The query to get all restaurants
    """
    restaurants: [Restaurant]
}

input CreateUserInput {
    """
    The user's email
    """
    email: String!
    """
    The user's first name
    """
    firstName: String!
    """
    The user's last name
    """
    lastName: String!
    """
    The user's password
    """
    password: String!
}

input AuthenticateUserInput {
    """
    The user's email
    """
    email: String!
    """
    The user's password
    """
    password: String!
}

input GenerateAccessTokenFromRefreshTokenInput {
    """
    The user's refresh token
    """
    refreshToken: String!
}

type TokenPairResponse {
    """
    The user's access token, to be stored and used to authenticate every request
    """
    accessToken: String
    """
    The user's refresh token, to be stored and used to regenerate a new access token when it expires
    """
    refreshToken: String
}

input GetUsernameByIdInput {
    """
    The user's id
    """
    userId: ID!
}

type GetUsernameByIdResponse {
    """
    The user's username
    """
    username: String
}

type Restaurant {
    """
    The restaurant's ID
    """
    id: ID!
    """
    Restaurant's name
    """
    name: String!
    """
    Restaurant's locations
    """
    locations: [RestaurantLocations]
}

type RestaurantLocations {
    """
    The restaurant's street sddress line 1
    """
    streetAddressLine1: String!
    """
    The restaurant's street sddress line 2 - can be null
    """
    streetAddressLine2: String
    """
    The restaurant's city
    """
    city: String!
    """
    The restaurant's province/state - both Canadian and US restaurants will use this province field
    """
    province: String!
    """
    The restaurant's country - 2 letter country code
    """
    country: String!
    """
    The restaurant's postal/zip code - both Canadian and US restaurants will use this postalCode field
    """
    postalCode: String!
}
