// source: proto/pharmacist_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.pb.AuthenticateUserRequest', null, global);
goog.exportSymbol('proto.pb.AuthenticateUserResponse', null, global);
goog.exportSymbol('proto.pb.CreateUserRequest', null, global);
goog.exportSymbol('proto.pb.CreateUserResponse', null, global);
goog.exportSymbol(
    'proto.pb.GenerateAccessTokenFromRefreshTokenRequest',
    null,
    global
);
goog.exportSymbol(
    'proto.pb.GenerateAccessTokenFromRefreshTokenResponse',
    null,
    global
);
goog.exportSymbol('proto.pb.GetUserByIdRequest', null, global);
goog.exportSymbol('proto.pb.GetUserByIdResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetUserByIdRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetUserByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.pb.GetUserByIdRequest.displayName = 'proto.pb.GetUserByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GetUserByIdResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.GetUserByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.pb.GetUserByIdResponse.displayName = 'proto.pb.GetUserByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.CreateUserRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.CreateUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.pb.CreateUserRequest.displayName = 'proto.pb.CreateUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.CreateUserResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.CreateUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.pb.CreateUserResponse.displayName = 'proto.pb.CreateUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.AuthenticateUserRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.AuthenticateUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.pb.AuthenticateUserRequest.displayName =
        'proto.pb.AuthenticateUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.AuthenticateUserResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.AuthenticateUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.pb.AuthenticateUserResponse.displayName =
        'proto.pb.AuthenticateUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GenerateAccessTokenFromRefreshTokenRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
    proto.pb.GenerateAccessTokenFromRefreshTokenRequest,
    jspb.Message
);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.pb.GenerateAccessTokenFromRefreshTokenRequest.displayName =
        'proto.pb.GenerateAccessTokenFromRefreshTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.GenerateAccessTokenFromRefreshTokenResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
    proto.pb.GenerateAccessTokenFromRefreshTokenResponse,
    jspb.Message
);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.pb.GenerateAccessTokenFromRefreshTokenResponse.displayName =
        'proto.pb.GenerateAccessTokenFromRefreshTokenResponse';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.pb.GetUserByIdRequest.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.pb.GetUserByIdRequest.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.pb.GetUserByIdRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.pb.GetUserByIdRequest.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                userid: jspb.Message.getFieldWithDefault(msg, 1, ''),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetUserByIdRequest}
 */
proto.pb.GetUserByIdRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.pb.GetUserByIdRequest();
    return proto.pb.GetUserByIdRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetUserByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetUserByIdRequest}
 */
proto.pb.GetUserByIdRequest.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUserid(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetUserByIdRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.pb.GetUserByIdRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetUserByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetUserByIdRequest.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
    f = message.getUserid();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};

/**
 * optional string userId = 1;
 * @return {string}
 */
proto.pb.GetUserByIdRequest.prototype.getUserid = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 1, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.pb.GetUserByIdRequest} returns this
 */
proto.pb.GetUserByIdRequest.prototype.setUserid = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.pb.GetUserByIdResponse.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.pb.GetUserByIdResponse.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.pb.GetUserByIdResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.pb.GetUserByIdResponse.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                username: jspb.Message.getFieldWithDefault(msg, 1, ''),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GetUserByIdResponse}
 */
proto.pb.GetUserByIdResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.pb.GetUserByIdResponse();
    return proto.pb.GetUserByIdResponse.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GetUserByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GetUserByIdResponse}
 */
proto.pb.GetUserByIdResponse.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUsername(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GetUserByIdResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.pb.GetUserByIdResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GetUserByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GetUserByIdResponse.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
    f = message.getUsername();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};

/**
 * optional string username = 1;
 * @return {string}
 */
proto.pb.GetUserByIdResponse.prototype.getUsername = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 1, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.pb.GetUserByIdResponse} returns this
 */
proto.pb.GetUserByIdResponse.prototype.setUsername = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.pb.CreateUserRequest.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.pb.CreateUserRequest.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.pb.CreateUserRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.pb.CreateUserRequest.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                email: jspb.Message.getFieldWithDefault(msg, 1, ''),
                firstname: jspb.Message.getFieldWithDefault(msg, 2, ''),
                lastname: jspb.Message.getFieldWithDefault(msg, 3, ''),
                password: jspb.Message.getFieldWithDefault(msg, 4, ''),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.CreateUserRequest}
 */
proto.pb.CreateUserRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.pb.CreateUserRequest();
    return proto.pb.CreateUserRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.CreateUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.CreateUserRequest}
 */
proto.pb.CreateUserRequest.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setEmail(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFirstname(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setLastname(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setPassword(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.CreateUserRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.pb.CreateUserRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.CreateUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.CreateUserRequest.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
    f = message.getEmail();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getFirstname();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getLastname();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getPassword();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
};

/**
 * optional string email = 1;
 * @return {string}
 */
proto.pb.CreateUserRequest.prototype.getEmail = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 1, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.pb.CreateUserRequest} returns this
 */
proto.pb.CreateUserRequest.prototype.setEmail = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string firstName = 2;
 * @return {string}
 */
proto.pb.CreateUserRequest.prototype.getFirstname = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 2, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.pb.CreateUserRequest} returns this
 */
proto.pb.CreateUserRequest.prototype.setFirstname = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string lastName = 3;
 * @return {string}
 */
proto.pb.CreateUserRequest.prototype.getLastname = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 3, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.pb.CreateUserRequest} returns this
 */
proto.pb.CreateUserRequest.prototype.setLastname = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string password = 4;
 * @return {string}
 */
proto.pb.CreateUserRequest.prototype.getPassword = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 4, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.pb.CreateUserRequest} returns this
 */
proto.pb.CreateUserRequest.prototype.setPassword = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.pb.CreateUserResponse.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.pb.CreateUserResponse.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.pb.CreateUserResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.pb.CreateUserResponse.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                accesstoken: jspb.Message.getFieldWithDefault(msg, 1, ''),
                refreshtoken: jspb.Message.getFieldWithDefault(msg, 2, ''),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.CreateUserResponse}
 */
proto.pb.CreateUserResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.pb.CreateUserResponse();
    return proto.pb.CreateUserResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.CreateUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.CreateUserResponse}
 */
proto.pb.CreateUserResponse.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setAccesstoken(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setRefreshtoken(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.CreateUserResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.pb.CreateUserResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.CreateUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.CreateUserResponse.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
    f = message.getAccesstoken();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getRefreshtoken();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};

/**
 * optional string accessToken = 1;
 * @return {string}
 */
proto.pb.CreateUserResponse.prototype.getAccesstoken = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 1, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.pb.CreateUserResponse} returns this
 */
proto.pb.CreateUserResponse.prototype.setAccesstoken = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string refreshToken = 2;
 * @return {string}
 */
proto.pb.CreateUserResponse.prototype.getRefreshtoken = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 2, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.pb.CreateUserResponse} returns this
 */
proto.pb.CreateUserResponse.prototype.setRefreshtoken = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.pb.AuthenticateUserRequest.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.pb.AuthenticateUserRequest.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.pb.AuthenticateUserRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.pb.AuthenticateUserRequest.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {
                email: jspb.Message.getFieldWithDefault(msg, 1, ''),
                password: jspb.Message.getFieldWithDefault(msg, 2, ''),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.AuthenticateUserRequest}
 */
proto.pb.AuthenticateUserRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.pb.AuthenticateUserRequest();
    return proto.pb.AuthenticateUserRequest.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.AuthenticateUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.AuthenticateUserRequest}
 */
proto.pb.AuthenticateUserRequest.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setEmail(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setPassword(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.AuthenticateUserRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.pb.AuthenticateUserRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.AuthenticateUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.AuthenticateUserRequest.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
    f = message.getEmail();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getPassword();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};

/**
 * optional string email = 1;
 * @return {string}
 */
proto.pb.AuthenticateUserRequest.prototype.getEmail = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 1, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.pb.AuthenticateUserRequest} returns this
 */
proto.pb.AuthenticateUserRequest.prototype.setEmail = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string password = 2;
 * @return {string}
 */
proto.pb.AuthenticateUserRequest.prototype.getPassword = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 2, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.pb.AuthenticateUserRequest} returns this
 */
proto.pb.AuthenticateUserRequest.prototype.setPassword = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.pb.AuthenticateUserResponse.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.pb.AuthenticateUserResponse.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.pb.AuthenticateUserResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.pb.AuthenticateUserResponse.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {
                accesstoken: jspb.Message.getFieldWithDefault(msg, 1, ''),
                refreshtoken: jspb.Message.getFieldWithDefault(msg, 2, ''),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.AuthenticateUserResponse}
 */
proto.pb.AuthenticateUserResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.pb.AuthenticateUserResponse();
    return proto.pb.AuthenticateUserResponse.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.AuthenticateUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.AuthenticateUserResponse}
 */
proto.pb.AuthenticateUserResponse.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setAccesstoken(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setRefreshtoken(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.AuthenticateUserResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.pb.AuthenticateUserResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.AuthenticateUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.AuthenticateUserResponse.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
    f = message.getAccesstoken();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getRefreshtoken();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};

/**
 * optional string accessToken = 1;
 * @return {string}
 */
proto.pb.AuthenticateUserResponse.prototype.getAccesstoken = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 1, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.pb.AuthenticateUserResponse} returns this
 */
proto.pb.AuthenticateUserResponse.prototype.setAccesstoken = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string refreshToken = 2;
 * @return {string}
 */
proto.pb.AuthenticateUserResponse.prototype.getRefreshtoken = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 2, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.pb.AuthenticateUserResponse} returns this
 */
proto.pb.AuthenticateUserResponse.prototype.setRefreshtoken = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.pb.GenerateAccessTokenFromRefreshTokenRequest.prototype.toObject =
        function (opt_includeInstance) {
            return proto.pb.GenerateAccessTokenFromRefreshTokenRequest.toObject(
                opt_includeInstance,
                this
            );
        };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.pb.GenerateAccessTokenFromRefreshTokenRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.pb.GenerateAccessTokenFromRefreshTokenRequest.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {
                refreshtoken: jspb.Message.getFieldWithDefault(msg, 1, ''),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GenerateAccessTokenFromRefreshTokenRequest}
 */
proto.pb.GenerateAccessTokenFromRefreshTokenRequest.deserializeBinary =
    function (bytes) {
        var reader = new jspb.BinaryReader(bytes);
        var msg = new proto.pb.GenerateAccessTokenFromRefreshTokenRequest();
        return proto.pb.GenerateAccessTokenFromRefreshTokenRequest.deserializeBinaryFromReader(
            msg,
            reader
        );
    };

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GenerateAccessTokenFromRefreshTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GenerateAccessTokenFromRefreshTokenRequest}
 */
proto.pb.GenerateAccessTokenFromRefreshTokenRequest.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = /** @type {string} */ (reader.readString());
                    msg.setRefreshtoken(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GenerateAccessTokenFromRefreshTokenRequest.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.pb.GenerateAccessTokenFromRefreshTokenRequest.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GenerateAccessTokenFromRefreshTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GenerateAccessTokenFromRefreshTokenRequest.serializeBinaryToWriter =
    function (message, writer) {
        var f = undefined;
        f = message.getRefreshtoken();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
    };

/**
 * optional string refreshToken = 1;
 * @return {string}
 */
proto.pb.GenerateAccessTokenFromRefreshTokenRequest.prototype.getRefreshtoken =
    function () {
        return /** @type {string} */ (
            jspb.Message.getFieldWithDefault(this, 1, '')
        );
    };

/**
 * @param {string} value
 * @return {!proto.pb.GenerateAccessTokenFromRefreshTokenRequest} returns this
 */
proto.pb.GenerateAccessTokenFromRefreshTokenRequest.prototype.setRefreshtoken =
    function (value) {
        return jspb.Message.setProto3StringField(this, 1, value);
    };

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.pb.GenerateAccessTokenFromRefreshTokenResponse.prototype.toObject =
        function (opt_includeInstance) {
            return proto.pb.GenerateAccessTokenFromRefreshTokenResponse.toObject(
                opt_includeInstance,
                this
            );
        };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.pb.GenerateAccessTokenFromRefreshTokenResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.pb.GenerateAccessTokenFromRefreshTokenResponse.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {
                accesstoken: jspb.Message.getFieldWithDefault(msg, 1, ''),
                refreshtoken: jspb.Message.getFieldWithDefault(msg, 2, ''),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.GenerateAccessTokenFromRefreshTokenResponse}
 */
proto.pb.GenerateAccessTokenFromRefreshTokenResponse.deserializeBinary =
    function (bytes) {
        var reader = new jspb.BinaryReader(bytes);
        var msg = new proto.pb.GenerateAccessTokenFromRefreshTokenResponse();
        return proto.pb.GenerateAccessTokenFromRefreshTokenResponse.deserializeBinaryFromReader(
            msg,
            reader
        );
    };

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.GenerateAccessTokenFromRefreshTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.GenerateAccessTokenFromRefreshTokenResponse}
 */
proto.pb.GenerateAccessTokenFromRefreshTokenResponse.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                case 1:
                    var value = /** @type {string} */ (reader.readString());
                    msg.setAccesstoken(value);
                    break;
                case 2:
                    var value = /** @type {string} */ (reader.readString());
                    msg.setRefreshtoken(value);
                    break;
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.GenerateAccessTokenFromRefreshTokenResponse.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.pb.GenerateAccessTokenFromRefreshTokenResponse.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.GenerateAccessTokenFromRefreshTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.GenerateAccessTokenFromRefreshTokenResponse.serializeBinaryToWriter =
    function (message, writer) {
        var f = undefined;
        f = message.getAccesstoken();
        if (f.length > 0) {
            writer.writeString(1, f);
        }
        f = message.getRefreshtoken();
        if (f.length > 0) {
            writer.writeString(2, f);
        }
    };

/**
 * optional string accessToken = 1;
 * @return {string}
 */
proto.pb.GenerateAccessTokenFromRefreshTokenResponse.prototype.getAccesstoken =
    function () {
        return /** @type {string} */ (
            jspb.Message.getFieldWithDefault(this, 1, '')
        );
    };

/**
 * @param {string} value
 * @return {!proto.pb.GenerateAccessTokenFromRefreshTokenResponse} returns this
 */
proto.pb.GenerateAccessTokenFromRefreshTokenResponse.prototype.setAccesstoken =
    function (value) {
        return jspb.Message.setProto3StringField(this, 1, value);
    };

/**
 * optional string refreshToken = 2;
 * @return {string}
 */
proto.pb.GenerateAccessTokenFromRefreshTokenResponse.prototype.getRefreshtoken =
    function () {
        return /** @type {string} */ (
            jspb.Message.getFieldWithDefault(this, 2, '')
        );
    };

/**
 * @param {string} value
 * @return {!proto.pb.GenerateAccessTokenFromRefreshTokenResponse} returns this
 */
proto.pb.GenerateAccessTokenFromRefreshTokenResponse.prototype.setRefreshtoken =
    function (value) {
        return jspb.Message.setProto3StringField(this, 2, value);
    };

goog.object.extend(exports, proto.pb);
